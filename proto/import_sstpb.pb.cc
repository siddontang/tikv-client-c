// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: import_sstpb.proto

#include "import_sstpb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace import_sstpb {
class RangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Range>
      _instance;
} _Range_default_instance_;
class SSTMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SSTMeta>
      _instance;
} _SSTMeta_default_instance_;
class UploadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadRequest>
      _instance;
  const ::import_sstpb::SSTMeta* meta_;
  ::google::protobuf::internal::ArenaStringPtr data_;
} _UploadRequest_default_instance_;
class UploadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadResponse>
      _instance;
} _UploadResponse_default_instance_;
class IngestRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IngestRequest>
      _instance;
} _IngestRequest_default_instance_;
class IngestResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IngestResponse>
      _instance;
} _IngestResponse_default_instance_;
}  // namespace import_sstpb
namespace protobuf_import_5fsstpb_2eproto {
void InitDefaultsRangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::import_sstpb::_Range_default_instance_;
    new (ptr) ::import_sstpb::Range();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_sstpb::Range::InitAsDefaultInstance();
}

void InitDefaultsRange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRangeImpl);
}

void InitDefaultsSSTMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_import_5fsstpb_2eproto::InitDefaultsRange();
  protobuf_metapb_2eproto::InitDefaultsRegionEpoch();
  {
    void* ptr = &::import_sstpb::_SSTMeta_default_instance_;
    new (ptr) ::import_sstpb::SSTMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_sstpb::SSTMeta::InitAsDefaultInstance();
}

void InitDefaultsSSTMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSSTMetaImpl);
}

void InitDefaultsUploadRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_import_5fsstpb_2eproto::InitDefaultsSSTMeta();
  {
    void* ptr = &::import_sstpb::_UploadRequest_default_instance_;
    new (ptr) ::import_sstpb::UploadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_sstpb::UploadRequest::InitAsDefaultInstance();
}

void InitDefaultsUploadRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUploadRequestImpl);
}

void InitDefaultsUploadResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::import_sstpb::_UploadResponse_default_instance_;
    new (ptr) ::import_sstpb::UploadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_sstpb::UploadResponse::InitAsDefaultInstance();
}

void InitDefaultsUploadResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUploadResponseImpl);
}

void InitDefaultsIngestRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_kvrpcpb_2eproto::InitDefaultsContext();
  protobuf_import_5fsstpb_2eproto::InitDefaultsSSTMeta();
  {
    void* ptr = &::import_sstpb::_IngestRequest_default_instance_;
    new (ptr) ::import_sstpb::IngestRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_sstpb::IngestRequest::InitAsDefaultInstance();
}

void InitDefaultsIngestRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIngestRequestImpl);
}

void InitDefaultsIngestResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_errorpb_2eproto::InitDefaultsError();
  {
    void* ptr = &::import_sstpb::_IngestResponse_default_instance_;
    new (ptr) ::import_sstpb::IngestResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_sstpb::IngestResponse::InitAsDefaultInstance();
}

void InitDefaultsIngestResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIngestResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::Range, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::Range, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::Range, end_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::SSTMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::SSTMeta, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::SSTMeta, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::SSTMeta, crc32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::SSTMeta, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::SSTMeta, cf_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::SSTMeta, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::SSTMeta, region_epoch_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::UploadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::UploadRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::import_sstpb::UploadRequestDefaultTypeInternal, meta_),
  offsetof(::import_sstpb::UploadRequestDefaultTypeInternal, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::UploadRequest, chunk_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::UploadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::IngestRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::IngestRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::IngestRequest, sst_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::IngestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_sstpb::IngestResponse, error_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::import_sstpb::Range)},
  { 7, -1, sizeof(::import_sstpb::SSTMeta)},
  { 19, -1, sizeof(::import_sstpb::UploadRequest)},
  { 27, -1, sizeof(::import_sstpb::UploadResponse)},
  { 32, -1, sizeof(::import_sstpb::IngestRequest)},
  { 39, -1, sizeof(::import_sstpb::IngestResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_sstpb::_Range_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_sstpb::_SSTMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_sstpb::_UploadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_sstpb::_UploadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_sstpb::_IngestRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_sstpb::_IngestResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "import_sstpb.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022import_sstpb.proto\022\014import_sstpb\032\014meta"
      "pb.proto\032\rerrorpb.proto\032\rkvrpcpb.proto\032\024"
      "gogoproto/gogo.proto\"#\n\005Range\022\r\n\005start\030\001"
      " \001(\014\022\013\n\003end\030\002 \001(\014\"\251\001\n\007SSTMeta\022\014\n\004uuid\030\001 "
      "\001(\014\022\"\n\005range\030\002 \001(\0132\023.import_sstpb.Range\022"
      "\r\n\005crc32\030\003 \001(\r\022\016\n\006length\030\004 \001(\004\022\017\n\007cf_nam"
      "e\030\005 \001(\t\022\021\n\tregion_id\030\006 \001(\004\022)\n\014region_epo"
      "ch\030\007 \001(\0132\023.metapb.RegionEpoch\"O\n\rUploadR"
      "equest\022%\n\004meta\030\001 \001(\0132\025.import_sstpb.SSTM"
      "etaH\000\022\016\n\004data\030\002 \001(\014H\000B\007\n\005chunk\"\020\n\016Upload"
      "Response\"V\n\rIngestRequest\022!\n\007context\030\001 \001"
      "(\0132\020.kvrpcpb.Context\022\"\n\003sst\030\002 \001(\0132\025.impo"
      "rt_sstpb.SSTMeta\"/\n\016IngestResponse\022\035\n\005er"
      "ror\030\001 \001(\0132\016.errorpb.Error2\233\001\n\tImportSST\022"
      "G\n\006Upload\022\033.import_sstpb.UploadRequest\032\034"
      ".import_sstpb.UploadResponse\"\000(\001\022E\n\006Inge"
      "st\022\033.import_sstpb.IngestRequest\032\034.import"
      "_sstpb.IngestResponse\"\000B&\n\030com.pingcap.t"
      "ikv.kvproto\340\342\036\001\310\342\036\001\320\342\036\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 751);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "import_sstpb.proto", &protobuf_RegisterTypes);
  ::protobuf_metapb_2eproto::AddDescriptors();
  ::protobuf_errorpb_2eproto::AddDescriptors();
  ::protobuf_kvrpcpb_2eproto::AddDescriptors();
  ::protobuf_gogoproto_2fgogo_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_import_5fsstpb_2eproto
namespace import_sstpb {

// ===================================================================

void Range::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Range::kStartFieldNumber;
const int Range::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Range::Range()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fsstpb_2eproto::InitDefaultsRange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.Range)
}
Range::Range(const Range& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start().size() > 0) {
    start_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_);
  }
  end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end().size() > 0) {
    end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_);
  }
  // @@protoc_insertion_point(copy_constructor:import_sstpb.Range)
}

void Range::SharedCtor() {
  start_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Range::~Range() {
  // @@protoc_insertion_point(destructor:import_sstpb.Range)
  SharedDtor();
}

void Range::SharedDtor() {
  start_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Range::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Range::descriptor() {
  ::protobuf_import_5fsstpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fsstpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Range& Range::default_instance() {
  ::protobuf_import_5fsstpb_2eproto::InitDefaultsRange();
  return *internal_default_instance();
}

Range* Range::New(::google::protobuf::Arena* arena) const {
  Range* n = new Range;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Range::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Range::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.Range)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.Range)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.Range)
  return false;
#undef DO_
}

void Range::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes start = 1;
  if (this->start().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->start(), output);
  }

  // bytes end = 2;
  if (this->end().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->end(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_sstpb.Range)
}

::google::protobuf::uint8* Range::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes start = 1;
  if (this->start().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->start(), target);
  }

  // bytes end = 2;
  if (this->end().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->end(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.Range)
  return target;
}

size_t Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.Range)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes start = 1;
  if (this->start().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->start());
  }

  // bytes end = 2;
  if (this->end().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->end());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Range::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.Range)
  GOOGLE_DCHECK_NE(&from, this);
  const Range* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Range>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.Range)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.Range)
    MergeFrom(*source);
  }
}

void Range::MergeFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.Range)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start().size() > 0) {

    start_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_);
  }
  if (from.end().size() > 0) {

    end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_);
  }
}

void Range::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Range::CopyFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Range::IsInitialized() const {
  return true;
}

void Range::Swap(Range* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Range::InternalSwap(Range* other) {
  using std::swap;
  start_.Swap(&other->start_);
  end_.Swap(&other->end_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Range::GetMetadata() const {
  protobuf_import_5fsstpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fsstpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SSTMeta::InitAsDefaultInstance() {
  ::import_sstpb::_SSTMeta_default_instance_._instance.get_mutable()->range_ = const_cast< ::import_sstpb::Range*>(
      ::import_sstpb::Range::internal_default_instance());
  ::import_sstpb::_SSTMeta_default_instance_._instance.get_mutable()->region_epoch_ = const_cast< ::metapb::RegionEpoch*>(
      ::metapb::RegionEpoch::internal_default_instance());
}
void SSTMeta::clear_region_epoch() {
  if (GetArenaNoVirtual() == NULL && region_epoch_ != NULL) {
    delete region_epoch_;
  }
  region_epoch_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SSTMeta::kUuidFieldNumber;
const int SSTMeta::kRangeFieldNumber;
const int SSTMeta::kCrc32FieldNumber;
const int SSTMeta::kLengthFieldNumber;
const int SSTMeta::kCfNameFieldNumber;
const int SSTMeta::kRegionIdFieldNumber;
const int SSTMeta::kRegionEpochFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SSTMeta::SSTMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fsstpb_2eproto::InitDefaultsSSTMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.SSTMeta)
}
SSTMeta::SSTMeta(const SSTMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  cf_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cf_name().size() > 0) {
    cf_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_name_);
  }
  if (from.has_range()) {
    range_ = new ::import_sstpb::Range(*from.range_);
  } else {
    range_ = NULL;
  }
  if (from.has_region_epoch()) {
    region_epoch_ = new ::metapb::RegionEpoch(*from.region_epoch_);
  } else {
    region_epoch_ = NULL;
  }
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&crc32_) -
    reinterpret_cast<char*>(&length_)) + sizeof(crc32_));
  // @@protoc_insertion_point(copy_constructor:import_sstpb.SSTMeta)
}

void SSTMeta::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crc32_) -
      reinterpret_cast<char*>(&range_)) + sizeof(crc32_));
  _cached_size_ = 0;
}

SSTMeta::~SSTMeta() {
  // @@protoc_insertion_point(destructor:import_sstpb.SSTMeta)
  SharedDtor();
}

void SSTMeta::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete range_;
  if (this != internal_default_instance()) delete region_epoch_;
}

void SSTMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SSTMeta::descriptor() {
  ::protobuf_import_5fsstpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fsstpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SSTMeta& SSTMeta::default_instance() {
  ::protobuf_import_5fsstpb_2eproto::InitDefaultsSSTMeta();
  return *internal_default_instance();
}

SSTMeta* SSTMeta::New(::google::protobuf::Arena* arena) const {
  SSTMeta* n = new SSTMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SSTMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.SSTMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && range_ != NULL) {
    delete range_;
  }
  range_ = NULL;
  if (GetArenaNoVirtual() == NULL && region_epoch_ != NULL) {
    delete region_epoch_;
  }
  region_epoch_ = NULL;
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crc32_) -
      reinterpret_cast<char*>(&length_)) + sizeof(crc32_));
  _internal_metadata_.Clear();
}

bool SSTMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.SSTMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .import_sstpb.Range range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 crc32 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crc32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 length = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cf_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf_name().data(), static_cast<int>(this->cf_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "import_sstpb.SSTMeta.cf_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 region_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metapb.RegionEpoch region_epoch = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_epoch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.SSTMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.SSTMeta)
  return false;
#undef DO_
}

void SSTMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.SSTMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  // .import_sstpb.Range range = 2;
  if (this->has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->range_, output);
  }

  // uint32 crc32 = 3;
  if (this->crc32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->crc32(), output);
  }

  // uint64 length = 4;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->length(), output);
  }

  // string cf_name = 5;
  if (this->cf_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf_name().data(), static_cast<int>(this->cf_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_sstpb.SSTMeta.cf_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->cf_name(), output);
  }

  // uint64 region_id = 6;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->region_id(), output);
  }

  // .metapb.RegionEpoch region_epoch = 7;
  if (this->has_region_epoch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->region_epoch_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_sstpb.SSTMeta)
}

::google::protobuf::uint8* SSTMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.SSTMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  // .import_sstpb.Range range = 2;
  if (this->has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->range_, deterministic, target);
  }

  // uint32 crc32 = 3;
  if (this->crc32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->crc32(), target);
  }

  // uint64 length = 4;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->length(), target);
  }

  // string cf_name = 5;
  if (this->cf_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf_name().data(), static_cast<int>(this->cf_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_sstpb.SSTMeta.cf_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->cf_name(), target);
  }

  // uint64 region_id = 6;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->region_id(), target);
  }

  // .metapb.RegionEpoch region_epoch = 7;
  if (this->has_region_epoch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->region_epoch_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.SSTMeta)
  return target;
}

size_t SSTMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.SSTMeta)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  // string cf_name = 5;
  if (this->cf_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf_name());
  }

  // .import_sstpb.Range range = 2;
  if (this->has_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->range_);
  }

  // .metapb.RegionEpoch region_epoch = 7;
  if (this->has_region_epoch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->region_epoch_);
  }

  // uint64 length = 4;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->length());
  }

  // uint64 region_id = 6;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());
  }

  // uint32 crc32 = 3;
  if (this->crc32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->crc32());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SSTMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.SSTMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const SSTMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SSTMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.SSTMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.SSTMeta)
    MergeFrom(*source);
  }
}

void SSTMeta::MergeFrom(const SSTMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.SSTMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.cf_name().size() > 0) {

    cf_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_name_);
  }
  if (from.has_range()) {
    mutable_range()->::import_sstpb::Range::MergeFrom(from.range());
  }
  if (from.has_region_epoch()) {
    mutable_region_epoch()->::metapb::RegionEpoch::MergeFrom(from.region_epoch());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
  if (from.crc32() != 0) {
    set_crc32(from.crc32());
  }
}

void SSTMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.SSTMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSTMeta::CopyFrom(const SSTMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.SSTMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSTMeta::IsInitialized() const {
  return true;
}

void SSTMeta::Swap(SSTMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SSTMeta::InternalSwap(SSTMeta* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  cf_name_.Swap(&other->cf_name_);
  swap(range_, other->range_);
  swap(region_epoch_, other->region_epoch_);
  swap(length_, other->length_);
  swap(region_id_, other->region_id_);
  swap(crc32_, other->crc32_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SSTMeta::GetMetadata() const {
  protobuf_import_5fsstpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fsstpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UploadRequest::InitAsDefaultInstance() {
  ::import_sstpb::_UploadRequest_default_instance_.meta_ = const_cast< ::import_sstpb::SSTMeta*>(
      ::import_sstpb::SSTMeta::internal_default_instance());
  ::import_sstpb::_UploadRequest_default_instance_.data_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UploadRequest::set_allocated_meta(::import_sstpb::SSTMeta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_chunk();
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    set_has_meta();
    chunk_.meta_ = meta;
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.UploadRequest.meta)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadRequest::kMetaFieldNumber;
const int UploadRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadRequest::UploadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fsstpb_2eproto::InitDefaultsUploadRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.UploadRequest)
}
UploadRequest::UploadRequest(const UploadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_chunk();
  switch (from.chunk_case()) {
    case kMeta: {
      mutable_meta()->::import_sstpb::SSTMeta::MergeFrom(from.meta());
      break;
    }
    case kData: {
      set_data(from.data());
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:import_sstpb.UploadRequest)
}

void UploadRequest::SharedCtor() {
  clear_has_chunk();
  _cached_size_ = 0;
}

UploadRequest::~UploadRequest() {
  // @@protoc_insertion_point(destructor:import_sstpb.UploadRequest)
  SharedDtor();
}

void UploadRequest::SharedDtor() {
  if (has_chunk()) {
    clear_chunk();
  }
}

void UploadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadRequest::descriptor() {
  ::protobuf_import_5fsstpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fsstpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadRequest& UploadRequest::default_instance() {
  ::protobuf_import_5fsstpb_2eproto::InitDefaultsUploadRequest();
  return *internal_default_instance();
}

UploadRequest* UploadRequest::New(::google::protobuf::Arena* arena) const {
  UploadRequest* n = new UploadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadRequest::clear_chunk() {
// @@protoc_insertion_point(one_of_clear_start:import_sstpb.UploadRequest)
  switch (chunk_case()) {
    case kMeta: {
      delete chunk_.meta_;
      break;
    }
    case kData: {
      chunk_.data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CHUNK_NOT_SET;
}


void UploadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.UploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_chunk();
  _internal_metadata_.Clear();
}

bool UploadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.UploadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .import_sstpb.SSTMeta meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.UploadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.UploadRequest)
  return false;
#undef DO_
}

void UploadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.UploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_sstpb.SSTMeta meta = 1;
  if (has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *chunk_.meta_, output);
  }

  // bytes data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_sstpb.UploadRequest)
}

::google::protobuf::uint8* UploadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.UploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_sstpb.SSTMeta meta = 1;
  if (has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *chunk_.meta_, deterministic, target);
  }

  // bytes data = 2;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.UploadRequest)
  return target;
}

size_t UploadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.UploadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (chunk_case()) {
    // .import_sstpb.SSTMeta meta = 1;
    case kMeta: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *chunk_.meta_);
      break;
    }
    // bytes data = 2;
    case kData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.UploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.UploadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.UploadRequest)
    MergeFrom(*source);
  }
}

void UploadRequest::MergeFrom(const UploadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.UploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.chunk_case()) {
    case kMeta: {
      mutable_meta()->::import_sstpb::SSTMeta::MergeFrom(from.meta());
      break;
    }
    case kData: {
      set_data(from.data());
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
}

void UploadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.UploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadRequest::CopyFrom(const UploadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.UploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadRequest::IsInitialized() const {
  return true;
}

void UploadRequest::Swap(UploadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadRequest::InternalSwap(UploadRequest* other) {
  using std::swap;
  swap(chunk_, other->chunk_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadRequest::GetMetadata() const {
  protobuf_import_5fsstpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fsstpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UploadResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadResponse::UploadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fsstpb_2eproto::InitDefaultsUploadResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.UploadResponse)
}
UploadResponse::UploadResponse(const UploadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:import_sstpb.UploadResponse)
}

void UploadResponse::SharedCtor() {
  _cached_size_ = 0;
}

UploadResponse::~UploadResponse() {
  // @@protoc_insertion_point(destructor:import_sstpb.UploadResponse)
  SharedDtor();
}

void UploadResponse::SharedDtor() {
}

void UploadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadResponse::descriptor() {
  ::protobuf_import_5fsstpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fsstpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadResponse& UploadResponse::default_instance() {
  ::protobuf_import_5fsstpb_2eproto::InitDefaultsUploadResponse();
  return *internal_default_instance();
}

UploadResponse* UploadResponse::New(::google::protobuf::Arena* arena) const {
  UploadResponse* n = new UploadResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.UploadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool UploadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.UploadResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.UploadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.UploadResponse)
  return false;
#undef DO_
}

void UploadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.UploadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_sstpb.UploadResponse)
}

::google::protobuf::uint8* UploadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.UploadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.UploadResponse)
  return target;
}

size_t UploadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.UploadResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.UploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.UploadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.UploadResponse)
    MergeFrom(*source);
  }
}

void UploadResponse::MergeFrom(const UploadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.UploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UploadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.UploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadResponse::CopyFrom(const UploadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.UploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadResponse::IsInitialized() const {
  return true;
}

void UploadResponse::Swap(UploadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadResponse::InternalSwap(UploadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadResponse::GetMetadata() const {
  protobuf_import_5fsstpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fsstpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IngestRequest::InitAsDefaultInstance() {
  ::import_sstpb::_IngestRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
  ::import_sstpb::_IngestRequest_default_instance_._instance.get_mutable()->sst_ = const_cast< ::import_sstpb::SSTMeta*>(
      ::import_sstpb::SSTMeta::internal_default_instance());
}
void IngestRequest::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IngestRequest::kContextFieldNumber;
const int IngestRequest::kSstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IngestRequest::IngestRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fsstpb_2eproto::InitDefaultsIngestRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.IngestRequest)
}
IngestRequest::IngestRequest(const IngestRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  if (from.has_sst()) {
    sst_ = new ::import_sstpb::SSTMeta(*from.sst_);
  } else {
    sst_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:import_sstpb.IngestRequest)
}

void IngestRequest::SharedCtor() {
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sst_) -
      reinterpret_cast<char*>(&context_)) + sizeof(sst_));
  _cached_size_ = 0;
}

IngestRequest::~IngestRequest() {
  // @@protoc_insertion_point(destructor:import_sstpb.IngestRequest)
  SharedDtor();
}

void IngestRequest::SharedDtor() {
  if (this != internal_default_instance()) delete context_;
  if (this != internal_default_instance()) delete sst_;
}

void IngestRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IngestRequest::descriptor() {
  ::protobuf_import_5fsstpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fsstpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IngestRequest& IngestRequest::default_instance() {
  ::protobuf_import_5fsstpb_2eproto::InitDefaultsIngestRequest();
  return *internal_default_instance();
}

IngestRequest* IngestRequest::New(::google::protobuf::Arena* arena) const {
  IngestRequest* n = new IngestRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IngestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.IngestRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  if (GetArenaNoVirtual() == NULL && sst_ != NULL) {
    delete sst_;
  }
  sst_ = NULL;
  _internal_metadata_.Clear();
}

bool IngestRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.IngestRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .import_sstpb.SSTMeta sst = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sst()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.IngestRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.IngestRequest)
  return false;
#undef DO_
}

void IngestRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.IngestRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->context_, output);
  }

  // .import_sstpb.SSTMeta sst = 2;
  if (this->has_sst()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sst_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_sstpb.IngestRequest)
}

::google::protobuf::uint8* IngestRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.IngestRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->context_, deterministic, target);
  }

  // .import_sstpb.SSTMeta sst = 2;
  if (this->has_sst()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->sst_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.IngestRequest)
  return target;
}

size_t IngestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.IngestRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->context_);
  }

  // .import_sstpb.SSTMeta sst = 2;
  if (this->has_sst()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sst_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IngestRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.IngestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IngestRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IngestRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.IngestRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.IngestRequest)
    MergeFrom(*source);
  }
}

void IngestRequest::MergeFrom(const IngestRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.IngestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.has_sst()) {
    mutable_sst()->::import_sstpb::SSTMeta::MergeFrom(from.sst());
  }
}

void IngestRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.IngestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IngestRequest::CopyFrom(const IngestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.IngestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IngestRequest::IsInitialized() const {
  return true;
}

void IngestRequest::Swap(IngestRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IngestRequest::InternalSwap(IngestRequest* other) {
  using std::swap;
  swap(context_, other->context_);
  swap(sst_, other->sst_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IngestRequest::GetMetadata() const {
  protobuf_import_5fsstpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fsstpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IngestResponse::InitAsDefaultInstance() {
  ::import_sstpb::_IngestResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}
void IngestResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IngestResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IngestResponse::IngestResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fsstpb_2eproto::InitDefaultsIngestResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.IngestResponse)
}
IngestResponse::IngestResponse(const IngestResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::errorpb::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:import_sstpb.IngestResponse)
}

void IngestResponse::SharedCtor() {
  error_ = NULL;
  _cached_size_ = 0;
}

IngestResponse::~IngestResponse() {
  // @@protoc_insertion_point(destructor:import_sstpb.IngestResponse)
  SharedDtor();
}

void IngestResponse::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void IngestResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IngestResponse::descriptor() {
  ::protobuf_import_5fsstpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fsstpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IngestResponse& IngestResponse::default_instance() {
  ::protobuf_import_5fsstpb_2eproto::InitDefaultsIngestResponse();
  return *internal_default_instance();
}

IngestResponse* IngestResponse::New(::google::protobuf::Arena* arena) const {
  IngestResponse* n = new IngestResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IngestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.IngestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool IngestResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.IngestResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.IngestResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.IngestResponse)
  return false;
#undef DO_
}

void IngestResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.IngestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_sstpb.IngestResponse)
}

::google::protobuf::uint8* IngestResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.IngestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->error_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.IngestResponse)
  return target;
}

size_t IngestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.IngestResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .errorpb.Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IngestResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.IngestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IngestResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IngestResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.IngestResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.IngestResponse)
    MergeFrom(*source);
  }
}

void IngestResponse::MergeFrom(const IngestResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.IngestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::errorpb::Error::MergeFrom(from.error());
  }
}

void IngestResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.IngestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IngestResponse::CopyFrom(const IngestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.IngestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IngestResponse::IsInitialized() const {
  return true;
}

void IngestResponse::Swap(IngestResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IngestResponse::InternalSwap(IngestResponse* other) {
  using std::swap;
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IngestResponse::GetMetadata() const {
  protobuf_import_5fsstpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fsstpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace import_sstpb

// @@protoc_insertion_point(global_scope)
