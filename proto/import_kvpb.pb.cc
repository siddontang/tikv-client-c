// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: import_kvpb.proto

#include "import_kvpb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace import_kvpb {
class OpenRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpenRequest>
      _instance;
} _OpenRequest_default_instance_;
class OpenResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpenResponse>
      _instance;
} _OpenResponse_default_instance_;
class WriteHeadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteHead>
      _instance;
} _WriteHead_default_instance_;
class MutationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mutation>
      _instance;
} _Mutation_default_instance_;
class WriteBatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteBatch>
      _instance;
} _WriteBatch_default_instance_;
class WriteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteRequest>
      _instance;
  const ::import_kvpb::WriteHead* head_;
  const ::import_kvpb::WriteBatch* batch_;
} _WriteRequest_default_instance_;
class WriteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteResponse>
      _instance;
} _WriteResponse_default_instance_;
class CloseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseRequest>
      _instance;
} _CloseRequest_default_instance_;
class CloseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseResponse>
      _instance;
} _CloseResponse_default_instance_;
class Error_EngineNotFoundDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Error_EngineNotFound>
      _instance;
} _Error_EngineNotFound_default_instance_;
class ErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Error>
      _instance;
} _Error_default_instance_;
}  // namespace import_kvpb
namespace protobuf_import_5fkvpb_2eproto {
void InitDefaultsOpenRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::import_kvpb::_OpenRequest_default_instance_;
    new (ptr) ::import_kvpb::OpenRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::OpenRequest::InitAsDefaultInstance();
}

void InitDefaultsOpenRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpenRequestImpl);
}

void InitDefaultsOpenResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::import_kvpb::_OpenResponse_default_instance_;
    new (ptr) ::import_kvpb::OpenResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::OpenResponse::InitAsDefaultInstance();
}

void InitDefaultsOpenResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpenResponseImpl);
}

void InitDefaultsWriteHeadImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::import_kvpb::_WriteHead_default_instance_;
    new (ptr) ::import_kvpb::WriteHead();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::WriteHead::InitAsDefaultInstance();
}

void InitDefaultsWriteHead() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWriteHeadImpl);
}

void InitDefaultsMutationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::import_kvpb::_Mutation_default_instance_;
    new (ptr) ::import_kvpb::Mutation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::Mutation::InitAsDefaultInstance();
}

void InitDefaultsMutation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMutationImpl);
}

void InitDefaultsWriteBatchImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_import_5fkvpb_2eproto::InitDefaultsMutation();
  {
    void* ptr = &::import_kvpb::_WriteBatch_default_instance_;
    new (ptr) ::import_kvpb::WriteBatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::WriteBatch::InitAsDefaultInstance();
}

void InitDefaultsWriteBatch() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWriteBatchImpl);
}

void InitDefaultsWriteRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_import_5fkvpb_2eproto::InitDefaultsWriteHead();
  protobuf_import_5fkvpb_2eproto::InitDefaultsWriteBatch();
  {
    void* ptr = &::import_kvpb::_WriteRequest_default_instance_;
    new (ptr) ::import_kvpb::WriteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::WriteRequest::InitAsDefaultInstance();
}

void InitDefaultsWriteRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWriteRequestImpl);
}

void InitDefaultsWriteResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_import_5fkvpb_2eproto::InitDefaultsError();
  {
    void* ptr = &::import_kvpb::_WriteResponse_default_instance_;
    new (ptr) ::import_kvpb::WriteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::WriteResponse::InitAsDefaultInstance();
}

void InitDefaultsWriteResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWriteResponseImpl);
}

void InitDefaultsCloseRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::import_kvpb::_CloseRequest_default_instance_;
    new (ptr) ::import_kvpb::CloseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::CloseRequest::InitAsDefaultInstance();
}

void InitDefaultsCloseRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloseRequestImpl);
}

void InitDefaultsCloseResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_import_5fkvpb_2eproto::InitDefaultsError();
  {
    void* ptr = &::import_kvpb::_CloseResponse_default_instance_;
    new (ptr) ::import_kvpb::CloseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::CloseResponse::InitAsDefaultInstance();
}

void InitDefaultsCloseResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCloseResponseImpl);
}

void InitDefaultsError_EngineNotFoundImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::import_kvpb::_Error_EngineNotFound_default_instance_;
    new (ptr) ::import_kvpb::Error_EngineNotFound();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::Error_EngineNotFound::InitAsDefaultInstance();
}

void InitDefaultsError_EngineNotFound() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsError_EngineNotFoundImpl);
}

void InitDefaultsErrorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_import_5fkvpb_2eproto::InitDefaultsError_EngineNotFound();
  {
    void* ptr = &::import_kvpb::_Error_default_instance_;
    new (ptr) ::import_kvpb::Error();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::Error::InitAsDefaultInstance();
}

void InitDefaultsError() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsErrorImpl);
}

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::OpenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::OpenRequest, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::OpenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteHead, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Mutation, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Mutation, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Mutation, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteBatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteBatch, commit_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteBatch, mutations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::import_kvpb::WriteRequestDefaultTypeInternal, head_),
  offsetof(::import_kvpb::WriteRequestDefaultTypeInternal, batch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteRequest, chunk_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::CloseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::CloseRequest, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::CloseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::CloseResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Error_EngineNotFound, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Error_EngineNotFound, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Error, engine_not_found_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::import_kvpb::OpenRequest)},
  { 6, -1, sizeof(::import_kvpb::OpenResponse)},
  { 11, -1, sizeof(::import_kvpb::WriteHead)},
  { 17, -1, sizeof(::import_kvpb::Mutation)},
  { 25, -1, sizeof(::import_kvpb::WriteBatch)},
  { 32, -1, sizeof(::import_kvpb::WriteRequest)},
  { 40, -1, sizeof(::import_kvpb::WriteResponse)},
  { 46, -1, sizeof(::import_kvpb::CloseRequest)},
  { 52, -1, sizeof(::import_kvpb::CloseResponse)},
  { 58, -1, sizeof(::import_kvpb::Error_EngineNotFound)},
  { 64, -1, sizeof(::import_kvpb::Error)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_OpenRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_OpenResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_WriteHead_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_Mutation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_WriteBatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_WriteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_WriteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_CloseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_CloseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_Error_EngineNotFound_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_Error_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "import_kvpb.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021import_kvpb.proto\022\013import_kvpb\032\024gogopr"
      "oto/gogo.proto\"\033\n\013OpenRequest\022\014\n\004uuid\030\001 "
      "\001(\014\"\016\n\014OpenResponse\"\031\n\tWriteHead\022\014\n\004uuid"
      "\030\001 \001(\014\"[\n\010Mutation\022$\n\002op\030\001 \001(\0162\030.import_"
      "kvpb.Mutation.OP\022\013\n\003key\030\002 \001(\014\022\r\n\005value\030\003"
      " \001(\014\"\r\n\002OP\022\007\n\003Put\020\000\"I\n\nWriteBatch\022\021\n\tcom"
      "mit_ts\030\001 \001(\004\022(\n\tmutations\030\002 \003(\0132\025.import"
      "_kvpb.Mutation\"i\n\014WriteRequest\022&\n\004head\030\001"
      " \001(\0132\026.import_kvpb.WriteHeadH\000\022(\n\005batch\030"
      "\002 \001(\0132\027.import_kvpb.WriteBatchH\000B\007\n\005chun"
      "k\"2\n\rWriteResponse\022!\n\005error\030\001 \001(\0132\022.impo"
      "rt_kvpb.Error\"\034\n\014CloseRequest\022\014\n\004uuid\030\001 "
      "\001(\014\"2\n\rCloseResponse\022!\n\005error\030\001 \001(\0132\022.im"
      "port_kvpb.Error\"d\n\005Error\022;\n\020engine_not_f"
      "ound\030\001 \001(\0132!.import_kvpb.Error.EngineNot"
      "Found\032\036\n\016EngineNotFound\022\014\n\004uuid\030\001 \001(\0142\317\001"
      "\n\010ImportKV\022=\n\004Open\022\030.import_kvpb.OpenReq"
      "uest\032\031.import_kvpb.OpenResponse\"\000\022B\n\005Wri"
      "te\022\031.import_kvpb.WriteRequest\032\032.import_k"
      "vpb.WriteResponse\"\000(\001\022@\n\005Close\022\031.import_"
      "kvpb.CloseRequest\032\032.import_kvpb.CloseRes"
      "ponse\"\000B&\n\030com.pingcap.tikv.kvproto\340\342\036\001\310"
      "\342\036\001\320\342\036\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 895);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "import_kvpb.proto", &protobuf_RegisterTypes);
  ::protobuf_gogoproto_2fgogo_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_import_5fkvpb_2eproto
namespace import_kvpb {
const ::google::protobuf::EnumDescriptor* Mutation_OP_descriptor() {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_import_5fkvpb_2eproto::file_level_enum_descriptors[0];
}
bool Mutation_OP_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Mutation_OP Mutation::Put;
const Mutation_OP Mutation::OP_MIN;
const Mutation_OP Mutation::OP_MAX;
const int Mutation::OP_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void OpenRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenRequest::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenRequest::OpenRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fkvpb_2eproto::InitDefaultsOpenRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.OpenRequest)
}
OpenRequest::OpenRequest(const OpenRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.OpenRequest)
}

void OpenRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OpenRequest::~OpenRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.OpenRequest)
  SharedDtor();
}

void OpenRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpenRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenRequest::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenRequest& OpenRequest::default_instance() {
  ::protobuf_import_5fkvpb_2eproto::InitDefaultsOpenRequest();
  return *internal_default_instance();
}

OpenRequest* OpenRequest::New(::google::protobuf::Arena* arena) const {
  OpenRequest* n = new OpenRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.OpenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool OpenRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.OpenRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.OpenRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.OpenRequest)
  return false;
#undef DO_
}

void OpenRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.OpenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.OpenRequest)
}

::google::protobuf::uint8* OpenRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.OpenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.OpenRequest)
  return target;
}

size_t OpenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.OpenRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.OpenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.OpenRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.OpenRequest)
    MergeFrom(*source);
  }
}

void OpenRequest::MergeFrom(const OpenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.OpenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void OpenRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.OpenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenRequest::CopyFrom(const OpenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.OpenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenRequest::IsInitialized() const {
  return true;
}

void OpenRequest::Swap(OpenRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenRequest::InternalSwap(OpenRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenRequest::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpenResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenResponse::OpenResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fkvpb_2eproto::InitDefaultsOpenResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.OpenResponse)
}
OpenResponse::OpenResponse(const OpenResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.OpenResponse)
}

void OpenResponse::SharedCtor() {
  _cached_size_ = 0;
}

OpenResponse::~OpenResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.OpenResponse)
  SharedDtor();
}

void OpenResponse::SharedDtor() {
}

void OpenResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenResponse::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenResponse& OpenResponse::default_instance() {
  ::protobuf_import_5fkvpb_2eproto::InitDefaultsOpenResponse();
  return *internal_default_instance();
}

OpenResponse* OpenResponse::New(::google::protobuf::Arena* arena) const {
  OpenResponse* n = new OpenResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.OpenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool OpenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.OpenResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.OpenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.OpenResponse)
  return false;
#undef DO_
}

void OpenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.OpenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.OpenResponse)
}

::google::protobuf::uint8* OpenResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.OpenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.OpenResponse)
  return target;
}

size_t OpenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.OpenResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.OpenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.OpenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.OpenResponse)
    MergeFrom(*source);
  }
}

void OpenResponse::MergeFrom(const OpenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.OpenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void OpenResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.OpenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenResponse::CopyFrom(const OpenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.OpenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenResponse::IsInitialized() const {
  return true;
}

void OpenResponse::Swap(OpenResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenResponse::InternalSwap(OpenResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenResponse::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteHead::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteHead::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteHead::WriteHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fkvpb_2eproto::InitDefaultsWriteHead();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.WriteHead)
}
WriteHead::WriteHead(const WriteHead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.WriteHead)
}

void WriteHead::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

WriteHead::~WriteHead() {
  // @@protoc_insertion_point(destructor:import_kvpb.WriteHead)
  SharedDtor();
}

void WriteHead::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WriteHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteHead::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteHead& WriteHead::default_instance() {
  ::protobuf_import_5fkvpb_2eproto::InitDefaultsWriteHead();
  return *internal_default_instance();
}

WriteHead* WriteHead::New(::google::protobuf::Arena* arena) const {
  WriteHead* n = new WriteHead;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteHead::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.WriteHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool WriteHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.WriteHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.WriteHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.WriteHead)
  return false;
#undef DO_
}

void WriteHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.WriteHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.WriteHead)
}

::google::protobuf::uint8* WriteHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.WriteHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.WriteHead)
  return target;
}

size_t WriteHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.WriteHead)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.WriteHead)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.WriteHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.WriteHead)
    MergeFrom(*source);
  }
}

void WriteHead::MergeFrom(const WriteHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.WriteHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void WriteHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.WriteHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteHead::CopyFrom(const WriteHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.WriteHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteHead::IsInitialized() const {
  return true;
}

void WriteHead::Swap(WriteHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteHead::InternalSwap(WriteHead* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteHead::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mutation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mutation::kOpFieldNumber;
const int Mutation::kKeyFieldNumber;
const int Mutation::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mutation::Mutation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fkvpb_2eproto::InitDefaultsMutation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.Mutation)
}
Mutation::Mutation(const Mutation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  op_ = from.op_;
  // @@protoc_insertion_point(copy_constructor:import_kvpb.Mutation)
}

void Mutation::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_ = 0;
  _cached_size_ = 0;
}

Mutation::~Mutation() {
  // @@protoc_insertion_point(destructor:import_kvpb.Mutation)
  SharedDtor();
}

void Mutation::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Mutation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mutation::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mutation& Mutation::default_instance() {
  ::protobuf_import_5fkvpb_2eproto::InitDefaultsMutation();
  return *internal_default_instance();
}

Mutation* Mutation::New(::google::protobuf::Arena* arena) const {
  Mutation* n = new Mutation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_ = 0;
  _internal_metadata_.Clear();
}

bool Mutation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.Mutation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .import_kvpb.Mutation.OP op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::import_kvpb::Mutation_OP >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.Mutation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.Mutation)
  return false;
#undef DO_
}

void Mutation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Mutation.OP op = 1;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op(), output);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.Mutation)
}

::google::protobuf::uint8* Mutation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Mutation.OP op = 1;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op(), target);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.Mutation)
  return target;
}

size_t Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.Mutation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .import_kvpb.Mutation.OP op = 1;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mutation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const Mutation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mutation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.Mutation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.Mutation)
    MergeFrom(*source);
  }
}

void Mutation::MergeFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void Mutation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mutation::CopyFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mutation::IsInitialized() const {
  return true;
}

void Mutation::Swap(Mutation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mutation::InternalSwap(Mutation* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Mutation::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteBatch::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteBatch::kCommitTsFieldNumber;
const int WriteBatch::kMutationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteBatch::WriteBatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fkvpb_2eproto::InitDefaultsWriteBatch();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.WriteBatch)
}
WriteBatch::WriteBatch(const WriteBatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mutations_(from.mutations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commit_ts_ = from.commit_ts_;
  // @@protoc_insertion_point(copy_constructor:import_kvpb.WriteBatch)
}

void WriteBatch::SharedCtor() {
  commit_ts_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

WriteBatch::~WriteBatch() {
  // @@protoc_insertion_point(destructor:import_kvpb.WriteBatch)
  SharedDtor();
}

void WriteBatch::SharedDtor() {
}

void WriteBatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteBatch::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteBatch& WriteBatch::default_instance() {
  ::protobuf_import_5fkvpb_2eproto::InitDefaultsWriteBatch();
  return *internal_default_instance();
}

WriteBatch* WriteBatch::New(::google::protobuf::Arena* arena) const {
  WriteBatch* n = new WriteBatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.WriteBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mutations_.Clear();
  commit_ts_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool WriteBatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.WriteBatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 commit_ts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &commit_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .import_kvpb.Mutation mutations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_mutations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.WriteBatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.WriteBatch)
  return false;
#undef DO_
}

void WriteBatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.WriteBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 commit_ts = 1;
  if (this->commit_ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->commit_ts(), output);
  }

  // repeated .import_kvpb.Mutation mutations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mutations(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.WriteBatch)
}

::google::protobuf::uint8* WriteBatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.WriteBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 commit_ts = 1;
  if (this->commit_ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->commit_ts(), target);
  }

  // repeated .import_kvpb.Mutation mutations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->mutations(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.WriteBatch)
  return target;
}

size_t WriteBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.WriteBatch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .import_kvpb.Mutation mutations = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->mutations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mutations(static_cast<int>(i)));
    }
  }

  // uint64 commit_ts = 1;
  if (this->commit_ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->commit_ts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteBatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.WriteBatch)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteBatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteBatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.WriteBatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.WriteBatch)
    MergeFrom(*source);
  }
}

void WriteBatch::MergeFrom(const WriteBatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.WriteBatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mutations_.MergeFrom(from.mutations_);
  if (from.commit_ts() != 0) {
    set_commit_ts(from.commit_ts());
  }
}

void WriteBatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.WriteBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteBatch::CopyFrom(const WriteBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.WriteBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteBatch::IsInitialized() const {
  return true;
}

void WriteBatch::Swap(WriteBatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteBatch::InternalSwap(WriteBatch* other) {
  using std::swap;
  mutations_.InternalSwap(&other->mutations_);
  swap(commit_ts_, other->commit_ts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteBatch::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteRequest::InitAsDefaultInstance() {
  ::import_kvpb::_WriteRequest_default_instance_.head_ = const_cast< ::import_kvpb::WriteHead*>(
      ::import_kvpb::WriteHead::internal_default_instance());
  ::import_kvpb::_WriteRequest_default_instance_.batch_ = const_cast< ::import_kvpb::WriteBatch*>(
      ::import_kvpb::WriteBatch::internal_default_instance());
}
void WriteRequest::set_allocated_head(::import_kvpb::WriteHead* head) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_chunk();
  if (head) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      head = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, head, submessage_arena);
    }
    set_has_head();
    chunk_.head_ = head;
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.WriteRequest.head)
}
void WriteRequest::set_allocated_batch(::import_kvpb::WriteBatch* batch) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_chunk();
  if (batch) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      batch = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, batch, submessage_arena);
    }
    set_has_batch();
    chunk_.batch_ = batch;
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.WriteRequest.batch)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteRequest::kHeadFieldNumber;
const int WriteRequest::kBatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteRequest::WriteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fkvpb_2eproto::InitDefaultsWriteRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.WriteRequest)
}
WriteRequest::WriteRequest(const WriteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_chunk();
  switch (from.chunk_case()) {
    case kHead: {
      mutable_head()->::import_kvpb::WriteHead::MergeFrom(from.head());
      break;
    }
    case kBatch: {
      mutable_batch()->::import_kvpb::WriteBatch::MergeFrom(from.batch());
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.WriteRequest)
}

void WriteRequest::SharedCtor() {
  clear_has_chunk();
  _cached_size_ = 0;
}

WriteRequest::~WriteRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.WriteRequest)
  SharedDtor();
}

void WriteRequest::SharedDtor() {
  if (has_chunk()) {
    clear_chunk();
  }
}

void WriteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteRequest::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteRequest& WriteRequest::default_instance() {
  ::protobuf_import_5fkvpb_2eproto::InitDefaultsWriteRequest();
  return *internal_default_instance();
}

WriteRequest* WriteRequest::New(::google::protobuf::Arena* arena) const {
  WriteRequest* n = new WriteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteRequest::clear_chunk() {
// @@protoc_insertion_point(one_of_clear_start:import_kvpb.WriteRequest)
  switch (chunk_case()) {
    case kHead: {
      delete chunk_.head_;
      break;
    }
    case kBatch: {
      delete chunk_.batch_;
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CHUNK_NOT_SET;
}


void WriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_chunk();
  _internal_metadata_.Clear();
}

bool WriteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.WriteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .import_kvpb.WriteHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .import_kvpb.WriteBatch batch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_batch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.WriteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.WriteRequest)
  return false;
#undef DO_
}

void WriteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.WriteHead head = 1;
  if (has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *chunk_.head_, output);
  }

  // .import_kvpb.WriteBatch batch = 2;
  if (has_batch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *chunk_.batch_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.WriteRequest)
}

::google::protobuf::uint8* WriteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.WriteHead head = 1;
  if (has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *chunk_.head_, deterministic, target);
  }

  // .import_kvpb.WriteBatch batch = 2;
  if (has_batch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *chunk_.batch_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.WriteRequest)
  return target;
}

size_t WriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.WriteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (chunk_case()) {
    // .import_kvpb.WriteHead head = 1;
    case kHead: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *chunk_.head_);
      break;
    }
    // .import_kvpb.WriteBatch batch = 2;
    case kBatch: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *chunk_.batch_);
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.WriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.WriteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.WriteRequest)
    MergeFrom(*source);
  }
}

void WriteRequest::MergeFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.WriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.chunk_case()) {
    case kHead: {
      mutable_head()->::import_kvpb::WriteHead::MergeFrom(from.head());
      break;
    }
    case kBatch: {
      mutable_batch()->::import_kvpb::WriteBatch::MergeFrom(from.batch());
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
}

void WriteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteRequest::CopyFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteRequest::IsInitialized() const {
  return true;
}

void WriteRequest::Swap(WriteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteRequest::InternalSwap(WriteRequest* other) {
  using std::swap;
  swap(chunk_, other->chunk_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteRequest::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteResponse::InitAsDefaultInstance() {
  ::import_kvpb::_WriteResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::import_kvpb::Error*>(
      ::import_kvpb::Error::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteResponse::WriteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fkvpb_2eproto::InitDefaultsWriteResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.WriteResponse)
}
WriteResponse::WriteResponse(const WriteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::import_kvpb::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.WriteResponse)
}

void WriteResponse::SharedCtor() {
  error_ = NULL;
  _cached_size_ = 0;
}

WriteResponse::~WriteResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.WriteResponse)
  SharedDtor();
}

void WriteResponse::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void WriteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteResponse::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteResponse& WriteResponse::default_instance() {
  ::protobuf_import_5fkvpb_2eproto::InitDefaultsWriteResponse();
  return *internal_default_instance();
}

WriteResponse* WriteResponse::New(::google::protobuf::Arena* arena) const {
  WriteResponse* n = new WriteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.WriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool WriteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.WriteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .import_kvpb.Error error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.WriteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.WriteResponse)
  return false;
#undef DO_
}

void WriteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.WriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.WriteResponse)
}

::google::protobuf::uint8* WriteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.WriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->error_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.WriteResponse)
  return target;
}

size_t WriteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.WriteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .import_kvpb.Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.WriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.WriteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.WriteResponse)
    MergeFrom(*source);
  }
}

void WriteResponse::MergeFrom(const WriteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.WriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::import_kvpb::Error::MergeFrom(from.error());
  }
}

void WriteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.WriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteResponse::CopyFrom(const WriteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.WriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteResponse::IsInitialized() const {
  return true;
}

void WriteResponse::Swap(WriteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteResponse::InternalSwap(WriteResponse* other) {
  using std::swap;
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteResponse::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseRequest::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseRequest::CloseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fkvpb_2eproto::InitDefaultsCloseRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.CloseRequest)
}
CloseRequest::CloseRequest(const CloseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.CloseRequest)
}

void CloseRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CloseRequest::~CloseRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.CloseRequest)
  SharedDtor();
}

void CloseRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CloseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseRequest::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseRequest& CloseRequest::default_instance() {
  ::protobuf_import_5fkvpb_2eproto::InitDefaultsCloseRequest();
  return *internal_default_instance();
}

CloseRequest* CloseRequest::New(::google::protobuf::Arena* arena) const {
  CloseRequest* n = new CloseRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.CloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CloseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.CloseRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.CloseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.CloseRequest)
  return false;
#undef DO_
}

void CloseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.CloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.CloseRequest)
}

::google::protobuf::uint8* CloseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.CloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.CloseRequest)
  return target;
}

size_t CloseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.CloseRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.CloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.CloseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.CloseRequest)
    MergeFrom(*source);
  }
}

void CloseRequest::MergeFrom(const CloseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.CloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void CloseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.CloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseRequest::CopyFrom(const CloseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.CloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseRequest::IsInitialized() const {
  return true;
}

void CloseRequest::Swap(CloseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseRequest::InternalSwap(CloseRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseRequest::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseResponse::InitAsDefaultInstance() {
  ::import_kvpb::_CloseResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::import_kvpb::Error*>(
      ::import_kvpb::Error::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseResponse::CloseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fkvpb_2eproto::InitDefaultsCloseResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.CloseResponse)
}
CloseResponse::CloseResponse(const CloseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::import_kvpb::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.CloseResponse)
}

void CloseResponse::SharedCtor() {
  error_ = NULL;
  _cached_size_ = 0;
}

CloseResponse::~CloseResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.CloseResponse)
  SharedDtor();
}

void CloseResponse::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void CloseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseResponse::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseResponse& CloseResponse::default_instance() {
  ::protobuf_import_5fkvpb_2eproto::InitDefaultsCloseResponse();
  return *internal_default_instance();
}

CloseResponse* CloseResponse::New(::google::protobuf::Arena* arena) const {
  CloseResponse* n = new CloseResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.CloseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool CloseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.CloseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .import_kvpb.Error error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.CloseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.CloseResponse)
  return false;
#undef DO_
}

void CloseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.CloseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.CloseResponse)
}

::google::protobuf::uint8* CloseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.CloseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->error_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.CloseResponse)
  return target;
}

size_t CloseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.CloseResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .import_kvpb.Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.CloseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.CloseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.CloseResponse)
    MergeFrom(*source);
  }
}

void CloseResponse::MergeFrom(const CloseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.CloseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::import_kvpb::Error::MergeFrom(from.error());
  }
}

void CloseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.CloseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseResponse::CopyFrom(const CloseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.CloseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseResponse::IsInitialized() const {
  return true;
}

void CloseResponse::Swap(CloseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseResponse::InternalSwap(CloseResponse* other) {
  using std::swap;
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseResponse::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Error_EngineNotFound::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error_EngineNotFound::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error_EngineNotFound::Error_EngineNotFound()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fkvpb_2eproto::InitDefaultsError_EngineNotFound();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.Error.EngineNotFound)
}
Error_EngineNotFound::Error_EngineNotFound(const Error_EngineNotFound& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.Error.EngineNotFound)
}

void Error_EngineNotFound::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Error_EngineNotFound::~Error_EngineNotFound() {
  // @@protoc_insertion_point(destructor:import_kvpb.Error.EngineNotFound)
  SharedDtor();
}

void Error_EngineNotFound::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Error_EngineNotFound::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Error_EngineNotFound::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Error_EngineNotFound& Error_EngineNotFound::default_instance() {
  ::protobuf_import_5fkvpb_2eproto::InitDefaultsError_EngineNotFound();
  return *internal_default_instance();
}

Error_EngineNotFound* Error_EngineNotFound::New(::google::protobuf::Arena* arena) const {
  Error_EngineNotFound* n = new Error_EngineNotFound;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Error_EngineNotFound::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.Error.EngineNotFound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Error_EngineNotFound::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.Error.EngineNotFound)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.Error.EngineNotFound)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.Error.EngineNotFound)
  return false;
#undef DO_
}

void Error_EngineNotFound::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.Error.EngineNotFound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.Error.EngineNotFound)
}

::google::protobuf::uint8* Error_EngineNotFound::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.Error.EngineNotFound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.Error.EngineNotFound)
  return target;
}

size_t Error_EngineNotFound::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.Error.EngineNotFound)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Error_EngineNotFound::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.Error.EngineNotFound)
  GOOGLE_DCHECK_NE(&from, this);
  const Error_EngineNotFound* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error_EngineNotFound>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.Error.EngineNotFound)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.Error.EngineNotFound)
    MergeFrom(*source);
  }
}

void Error_EngineNotFound::MergeFrom(const Error_EngineNotFound& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.Error.EngineNotFound)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void Error_EngineNotFound::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.Error.EngineNotFound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error_EngineNotFound::CopyFrom(const Error_EngineNotFound& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.Error.EngineNotFound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error_EngineNotFound::IsInitialized() const {
  return true;
}

void Error_EngineNotFound::Swap(Error_EngineNotFound* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error_EngineNotFound::InternalSwap(Error_EngineNotFound* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Error_EngineNotFound::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Error::InitAsDefaultInstance() {
  ::import_kvpb::_Error_default_instance_._instance.get_mutable()->engine_not_found_ = const_cast< ::import_kvpb::Error_EngineNotFound*>(
      ::import_kvpb::Error_EngineNotFound::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kEngineNotFoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_import_5fkvpb_2eproto::InitDefaultsError();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.Error)
}
Error::Error(const Error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_engine_not_found()) {
    engine_not_found_ = new ::import_kvpb::Error_EngineNotFound(*from.engine_not_found_);
  } else {
    engine_not_found_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.Error)
}

void Error::SharedCtor() {
  engine_not_found_ = NULL;
  _cached_size_ = 0;
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:import_kvpb.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  if (this != internal_default_instance()) delete engine_not_found_;
}

void Error::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Error& Error::default_instance() {
  ::protobuf_import_5fkvpb_2eproto::InitDefaultsError();
  return *internal_default_instance();
}

Error* Error::New(::google::protobuf::Arena* arena) const {
  Error* n = new Error;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && engine_not_found_ != NULL) {
    delete engine_not_found_;
  }
  engine_not_found_ = NULL;
  _internal_metadata_.Clear();
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.Error)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .import_kvpb.Error.EngineNotFound engine_not_found = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_engine_not_found()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Error.EngineNotFound engine_not_found = 1;
  if (this->has_engine_not_found()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->engine_not_found_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Error.EngineNotFound engine_not_found = 1;
  if (this->has_engine_not_found()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->engine_not_found_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.Error)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .import_kvpb.Error.EngineNotFound engine_not_found = 1;
  if (this->has_engine_not_found()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->engine_not_found_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_engine_not_found()) {
    mutable_engine_not_found()->::import_kvpb::Error_EngineNotFound::MergeFrom(from.engine_not_found());
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  using std::swap;
  swap(engine_not_found_, other->engine_not_found_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace import_kvpb

// @@protoc_insertion_point(global_scope)
