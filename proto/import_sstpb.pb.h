// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: import_sstpb.proto

#ifndef PROTOBUF_import_5fsstpb_2eproto__INCLUDED
#define PROTOBUF_import_5fsstpb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "metapb.pb.h"
#include "errorpb.pb.h"
#include "kvrpcpb.pb.h"
#include "gogoproto/gogo.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_import_5fsstpb_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRangeImpl();
void InitDefaultsRange();
void InitDefaultsSSTMetaImpl();
void InitDefaultsSSTMeta();
void InitDefaultsUploadRequestImpl();
void InitDefaultsUploadRequest();
void InitDefaultsUploadResponseImpl();
void InitDefaultsUploadResponse();
void InitDefaultsIngestRequestImpl();
void InitDefaultsIngestRequest();
void InitDefaultsIngestResponseImpl();
void InitDefaultsIngestResponse();
inline void InitDefaults() {
  InitDefaultsRange();
  InitDefaultsSSTMeta();
  InitDefaultsUploadRequest();
  InitDefaultsUploadResponse();
  InitDefaultsIngestRequest();
  InitDefaultsIngestResponse();
}
}  // namespace protobuf_import_5fsstpb_2eproto
namespace import_sstpb {
class IngestRequest;
class IngestRequestDefaultTypeInternal;
extern IngestRequestDefaultTypeInternal _IngestRequest_default_instance_;
class IngestResponse;
class IngestResponseDefaultTypeInternal;
extern IngestResponseDefaultTypeInternal _IngestResponse_default_instance_;
class Range;
class RangeDefaultTypeInternal;
extern RangeDefaultTypeInternal _Range_default_instance_;
class SSTMeta;
class SSTMetaDefaultTypeInternal;
extern SSTMetaDefaultTypeInternal _SSTMeta_default_instance_;
class UploadRequest;
class UploadRequestDefaultTypeInternal;
extern UploadRequestDefaultTypeInternal _UploadRequest_default_instance_;
class UploadResponse;
class UploadResponseDefaultTypeInternal;
extern UploadResponseDefaultTypeInternal _UploadResponse_default_instance_;
}  // namespace import_sstpb
namespace import_sstpb {

// ===================================================================

class Range : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.Range) */ {
 public:
  Range();
  virtual ~Range();

  Range(const Range& from);

  inline Range& operator=(const Range& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Range(Range&& from) noexcept
    : Range() {
    *this = ::std::move(from);
  }

  inline Range& operator=(Range&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Range& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Range* internal_default_instance() {
    return reinterpret_cast<const Range*>(
               &_Range_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Range* other);
  friend void swap(Range& a, Range& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Range* New() const PROTOBUF_FINAL { return New(NULL); }

  Range* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Range& from);
  void MergeFrom(const Range& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Range* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes start = 1;
  void clear_start();
  static const int kStartFieldNumber = 1;
  const ::std::string& start() const;
  void set_start(const ::std::string& value);
  #if LANG_CXX11
  void set_start(::std::string&& value);
  #endif
  void set_start(const char* value);
  void set_start(const void* value, size_t size);
  ::std::string* mutable_start();
  ::std::string* release_start();
  void set_allocated_start(::std::string* start);

  // bytes end = 2;
  void clear_end();
  static const int kEndFieldNumber = 2;
  const ::std::string& end() const;
  void set_end(const ::std::string& value);
  #if LANG_CXX11
  void set_end(::std::string&& value);
  #endif
  void set_end(const char* value);
  void set_end(const void* value, size_t size);
  ::std::string* mutable_end();
  ::std::string* release_end();
  void set_allocated_end(::std::string* end);

  // @@protoc_insertion_point(class_scope:import_sstpb.Range)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr start_;
  ::google::protobuf::internal::ArenaStringPtr end_;
  mutable int _cached_size_;
  friend struct ::protobuf_import_5fsstpb_2eproto::TableStruct;
  friend void ::protobuf_import_5fsstpb_2eproto::InitDefaultsRangeImpl();
};
// -------------------------------------------------------------------

class SSTMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.SSTMeta) */ {
 public:
  SSTMeta();
  virtual ~SSTMeta();

  SSTMeta(const SSTMeta& from);

  inline SSTMeta& operator=(const SSTMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SSTMeta(SSTMeta&& from) noexcept
    : SSTMeta() {
    *this = ::std::move(from);
  }

  inline SSTMeta& operator=(SSTMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SSTMeta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SSTMeta* internal_default_instance() {
    return reinterpret_cast<const SSTMeta*>(
               &_SSTMeta_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SSTMeta* other);
  friend void swap(SSTMeta& a, SSTMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SSTMeta* New() const PROTOBUF_FINAL { return New(NULL); }

  SSTMeta* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SSTMeta& from);
  void MergeFrom(const SSTMeta& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SSTMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const void* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string cf_name = 5;
  void clear_cf_name();
  static const int kCfNameFieldNumber = 5;
  const ::std::string& cf_name() const;
  void set_cf_name(const ::std::string& value);
  #if LANG_CXX11
  void set_cf_name(::std::string&& value);
  #endif
  void set_cf_name(const char* value);
  void set_cf_name(const char* value, size_t size);
  ::std::string* mutable_cf_name();
  ::std::string* release_cf_name();
  void set_allocated_cf_name(::std::string* cf_name);

  // .import_sstpb.Range range = 2;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 2;
  const ::import_sstpb::Range& range() const;
  ::import_sstpb::Range* release_range();
  ::import_sstpb::Range* mutable_range();
  void set_allocated_range(::import_sstpb::Range* range);

  // .metapb.RegionEpoch region_epoch = 7;
  bool has_region_epoch() const;
  void clear_region_epoch();
  static const int kRegionEpochFieldNumber = 7;
  const ::metapb::RegionEpoch& region_epoch() const;
  ::metapb::RegionEpoch* release_region_epoch();
  ::metapb::RegionEpoch* mutable_region_epoch();
  void set_allocated_region_epoch(::metapb::RegionEpoch* region_epoch);

  // uint64 length = 4;
  void clear_length();
  static const int kLengthFieldNumber = 4;
  ::google::protobuf::uint64 length() const;
  void set_length(::google::protobuf::uint64 value);

  // uint64 region_id = 6;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 6;
  ::google::protobuf::uint64 region_id() const;
  void set_region_id(::google::protobuf::uint64 value);

  // uint32 crc32 = 3;
  void clear_crc32();
  static const int kCrc32FieldNumber = 3;
  ::google::protobuf::uint32 crc32() const;
  void set_crc32(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:import_sstpb.SSTMeta)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr cf_name_;
  ::import_sstpb::Range* range_;
  ::metapb::RegionEpoch* region_epoch_;
  ::google::protobuf::uint64 length_;
  ::google::protobuf::uint64 region_id_;
  ::google::protobuf::uint32 crc32_;
  mutable int _cached_size_;
  friend struct ::protobuf_import_5fsstpb_2eproto::TableStruct;
  friend void ::protobuf_import_5fsstpb_2eproto::InitDefaultsSSTMetaImpl();
};
// -------------------------------------------------------------------

class UploadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.UploadRequest) */ {
 public:
  UploadRequest();
  virtual ~UploadRequest();

  UploadRequest(const UploadRequest& from);

  inline UploadRequest& operator=(const UploadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UploadRequest(UploadRequest&& from) noexcept
    : UploadRequest() {
    *this = ::std::move(from);
  }

  inline UploadRequest& operator=(UploadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadRequest& default_instance();

  enum ChunkCase {
    kMeta = 1,
    kData = 2,
    CHUNK_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UploadRequest* internal_default_instance() {
    return reinterpret_cast<const UploadRequest*>(
               &_UploadRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(UploadRequest* other);
  friend void swap(UploadRequest& a, UploadRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UploadRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UploadRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UploadRequest& from);
  void MergeFrom(const UploadRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UploadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .import_sstpb.SSTMeta meta = 1;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 1;
  const ::import_sstpb::SSTMeta& meta() const;
  ::import_sstpb::SSTMeta* release_meta();
  ::import_sstpb::SSTMeta* mutable_meta();
  void set_allocated_meta(::import_sstpb::SSTMeta* meta);

  // bytes data = 2;
  private:
  bool has_data() const;
  public:
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  ChunkCase chunk_case() const;
  // @@protoc_insertion_point(class_scope:import_sstpb.UploadRequest)
 private:
  void set_has_meta();
  void set_has_data();

  inline bool has_chunk() const;
  void clear_chunk();
  inline void clear_has_chunk();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ChunkUnion {
    ChunkUnion() {}
    ::import_sstpb::SSTMeta* meta_;
    ::google::protobuf::internal::ArenaStringPtr data_;
  } chunk_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_import_5fsstpb_2eproto::TableStruct;
  friend void ::protobuf_import_5fsstpb_2eproto::InitDefaultsUploadRequestImpl();
};
// -------------------------------------------------------------------

class UploadResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.UploadResponse) */ {
 public:
  UploadResponse();
  virtual ~UploadResponse();

  UploadResponse(const UploadResponse& from);

  inline UploadResponse& operator=(const UploadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UploadResponse(UploadResponse&& from) noexcept
    : UploadResponse() {
    *this = ::std::move(from);
  }

  inline UploadResponse& operator=(UploadResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UploadResponse* internal_default_instance() {
    return reinterpret_cast<const UploadResponse*>(
               &_UploadResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(UploadResponse* other);
  friend void swap(UploadResponse& a, UploadResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UploadResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  UploadResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UploadResponse& from);
  void MergeFrom(const UploadResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UploadResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:import_sstpb.UploadResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_import_5fsstpb_2eproto::TableStruct;
  friend void ::protobuf_import_5fsstpb_2eproto::InitDefaultsUploadResponseImpl();
};
// -------------------------------------------------------------------

class IngestRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.IngestRequest) */ {
 public:
  IngestRequest();
  virtual ~IngestRequest();

  IngestRequest(const IngestRequest& from);

  inline IngestRequest& operator=(const IngestRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IngestRequest(IngestRequest&& from) noexcept
    : IngestRequest() {
    *this = ::std::move(from);
  }

  inline IngestRequest& operator=(IngestRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IngestRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IngestRequest* internal_default_instance() {
    return reinterpret_cast<const IngestRequest*>(
               &_IngestRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(IngestRequest* other);
  friend void swap(IngestRequest& a, IngestRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IngestRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  IngestRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IngestRequest& from);
  void MergeFrom(const IngestRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IngestRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .kvrpcpb.Context context = 1;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 1;
  const ::kvrpcpb::Context& context() const;
  ::kvrpcpb::Context* release_context();
  ::kvrpcpb::Context* mutable_context();
  void set_allocated_context(::kvrpcpb::Context* context);

  // .import_sstpb.SSTMeta sst = 2;
  bool has_sst() const;
  void clear_sst();
  static const int kSstFieldNumber = 2;
  const ::import_sstpb::SSTMeta& sst() const;
  ::import_sstpb::SSTMeta* release_sst();
  ::import_sstpb::SSTMeta* mutable_sst();
  void set_allocated_sst(::import_sstpb::SSTMeta* sst);

  // @@protoc_insertion_point(class_scope:import_sstpb.IngestRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::kvrpcpb::Context* context_;
  ::import_sstpb::SSTMeta* sst_;
  mutable int _cached_size_;
  friend struct ::protobuf_import_5fsstpb_2eproto::TableStruct;
  friend void ::protobuf_import_5fsstpb_2eproto::InitDefaultsIngestRequestImpl();
};
// -------------------------------------------------------------------

class IngestResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.IngestResponse) */ {
 public:
  IngestResponse();
  virtual ~IngestResponse();

  IngestResponse(const IngestResponse& from);

  inline IngestResponse& operator=(const IngestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IngestResponse(IngestResponse&& from) noexcept
    : IngestResponse() {
    *this = ::std::move(from);
  }

  inline IngestResponse& operator=(IngestResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IngestResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IngestResponse* internal_default_instance() {
    return reinterpret_cast<const IngestResponse*>(
               &_IngestResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(IngestResponse* other);
  friend void swap(IngestResponse& a, IngestResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IngestResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  IngestResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IngestResponse& from);
  void MergeFrom(const IngestResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IngestResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .errorpb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::errorpb::Error& error() const;
  ::errorpb::Error* release_error();
  ::errorpb::Error* mutable_error();
  void set_allocated_error(::errorpb::Error* error);

  // @@protoc_insertion_point(class_scope:import_sstpb.IngestResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::errorpb::Error* error_;
  mutable int _cached_size_;
  friend struct ::protobuf_import_5fsstpb_2eproto::TableStruct;
  friend void ::protobuf_import_5fsstpb_2eproto::InitDefaultsIngestResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Range

// bytes start = 1;
inline void Range::clear_start() {
  start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Range::start() const {
  // @@protoc_insertion_point(field_get:import_sstpb.Range.start)
  return start_.GetNoArena();
}
inline void Range::set_start(const ::std::string& value) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_sstpb.Range.start)
}
#if LANG_CXX11
inline void Range::set_start(::std::string&& value) {
  
  start_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:import_sstpb.Range.start)
}
#endif
inline void Range::set_start(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_sstpb.Range.start)
}
inline void Range::set_start(const void* value, size_t size) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_sstpb.Range.start)
}
inline ::std::string* Range::mutable_start() {
  
  // @@protoc_insertion_point(field_mutable:import_sstpb.Range.start)
  return start_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Range::release_start() {
  // @@protoc_insertion_point(field_release:import_sstpb.Range.start)
  
  return start_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Range::set_allocated_start(::std::string* start) {
  if (start != NULL) {
    
  } else {
    
  }
  start_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start);
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.Range.start)
}

// bytes end = 2;
inline void Range::clear_end() {
  end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Range::end() const {
  // @@protoc_insertion_point(field_get:import_sstpb.Range.end)
  return end_.GetNoArena();
}
inline void Range::set_end(const ::std::string& value) {
  
  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_sstpb.Range.end)
}
#if LANG_CXX11
inline void Range::set_end(::std::string&& value) {
  
  end_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:import_sstpb.Range.end)
}
#endif
inline void Range::set_end(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_sstpb.Range.end)
}
inline void Range::set_end(const void* value, size_t size) {
  
  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_sstpb.Range.end)
}
inline ::std::string* Range::mutable_end() {
  
  // @@protoc_insertion_point(field_mutable:import_sstpb.Range.end)
  return end_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Range::release_end() {
  // @@protoc_insertion_point(field_release:import_sstpb.Range.end)
  
  return end_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Range::set_allocated_end(::std::string* end) {
  if (end != NULL) {
    
  } else {
    
  }
  end_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end);
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.Range.end)
}

// -------------------------------------------------------------------

// SSTMeta

// bytes uuid = 1;
inline void SSTMeta::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SSTMeta::uuid() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.uuid)
  return uuid_.GetNoArena();
}
inline void SSTMeta::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_sstpb.SSTMeta.uuid)
}
#if LANG_CXX11
inline void SSTMeta::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:import_sstpb.SSTMeta.uuid)
}
#endif
inline void SSTMeta::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_sstpb.SSTMeta.uuid)
}
inline void SSTMeta::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_sstpb.SSTMeta.uuid)
}
inline ::std::string* SSTMeta::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:import_sstpb.SSTMeta.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SSTMeta::release_uuid() {
  // @@protoc_insertion_point(field_release:import_sstpb.SSTMeta.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SSTMeta::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.SSTMeta.uuid)
}

// .import_sstpb.Range range = 2;
inline bool SSTMeta::has_range() const {
  return this != internal_default_instance() && range_ != NULL;
}
inline void SSTMeta::clear_range() {
  if (GetArenaNoVirtual() == NULL && range_ != NULL) {
    delete range_;
  }
  range_ = NULL;
}
inline const ::import_sstpb::Range& SSTMeta::range() const {
  const ::import_sstpb::Range* p = range_;
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.range)
  return p != NULL ? *p : *reinterpret_cast<const ::import_sstpb::Range*>(
      &::import_sstpb::_Range_default_instance_);
}
inline ::import_sstpb::Range* SSTMeta::release_range() {
  // @@protoc_insertion_point(field_release:import_sstpb.SSTMeta.range)
  
  ::import_sstpb::Range* temp = range_;
  range_ = NULL;
  return temp;
}
inline ::import_sstpb::Range* SSTMeta::mutable_range() {
  
  if (range_ == NULL) {
    range_ = new ::import_sstpb::Range;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.SSTMeta.range)
  return range_;
}
inline void SSTMeta::set_allocated_range(::import_sstpb::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete range_;
  }
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    
  } else {
    
  }
  range_ = range;
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.SSTMeta.range)
}

// uint32 crc32 = 3;
inline void SSTMeta::clear_crc32() {
  crc32_ = 0u;
}
inline ::google::protobuf::uint32 SSTMeta::crc32() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.crc32)
  return crc32_;
}
inline void SSTMeta::set_crc32(::google::protobuf::uint32 value) {
  
  crc32_ = value;
  // @@protoc_insertion_point(field_set:import_sstpb.SSTMeta.crc32)
}

// uint64 length = 4;
inline void SSTMeta::clear_length() {
  length_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SSTMeta::length() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.length)
  return length_;
}
inline void SSTMeta::set_length(::google::protobuf::uint64 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:import_sstpb.SSTMeta.length)
}

// string cf_name = 5;
inline void SSTMeta::clear_cf_name() {
  cf_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SSTMeta::cf_name() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.cf_name)
  return cf_name_.GetNoArena();
}
inline void SSTMeta::set_cf_name(const ::std::string& value) {
  
  cf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_sstpb.SSTMeta.cf_name)
}
#if LANG_CXX11
inline void SSTMeta::set_cf_name(::std::string&& value) {
  
  cf_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:import_sstpb.SSTMeta.cf_name)
}
#endif
inline void SSTMeta::set_cf_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_sstpb.SSTMeta.cf_name)
}
inline void SSTMeta::set_cf_name(const char* value, size_t size) {
  
  cf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_sstpb.SSTMeta.cf_name)
}
inline ::std::string* SSTMeta::mutable_cf_name() {
  
  // @@protoc_insertion_point(field_mutable:import_sstpb.SSTMeta.cf_name)
  return cf_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SSTMeta::release_cf_name() {
  // @@protoc_insertion_point(field_release:import_sstpb.SSTMeta.cf_name)
  
  return cf_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SSTMeta::set_allocated_cf_name(::std::string* cf_name) {
  if (cf_name != NULL) {
    
  } else {
    
  }
  cf_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cf_name);
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.SSTMeta.cf_name)
}

// uint64 region_id = 6;
inline void SSTMeta::clear_region_id() {
  region_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SSTMeta::region_id() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.region_id)
  return region_id_;
}
inline void SSTMeta::set_region_id(::google::protobuf::uint64 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:import_sstpb.SSTMeta.region_id)
}

// .metapb.RegionEpoch region_epoch = 7;
inline bool SSTMeta::has_region_epoch() const {
  return this != internal_default_instance() && region_epoch_ != NULL;
}
inline const ::metapb::RegionEpoch& SSTMeta::region_epoch() const {
  const ::metapb::RegionEpoch* p = region_epoch_;
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.region_epoch)
  return p != NULL ? *p : *reinterpret_cast<const ::metapb::RegionEpoch*>(
      &::metapb::_RegionEpoch_default_instance_);
}
inline ::metapb::RegionEpoch* SSTMeta::release_region_epoch() {
  // @@protoc_insertion_point(field_release:import_sstpb.SSTMeta.region_epoch)
  
  ::metapb::RegionEpoch* temp = region_epoch_;
  region_epoch_ = NULL;
  return temp;
}
inline ::metapb::RegionEpoch* SSTMeta::mutable_region_epoch() {
  
  if (region_epoch_ == NULL) {
    region_epoch_ = new ::metapb::RegionEpoch;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.SSTMeta.region_epoch)
  return region_epoch_;
}
inline void SSTMeta::set_allocated_region_epoch(::metapb::RegionEpoch* region_epoch) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(region_epoch_);
  }
  if (region_epoch) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      region_epoch = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, region_epoch, submessage_arena);
    }
    
  } else {
    
  }
  region_epoch_ = region_epoch;
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.SSTMeta.region_epoch)
}

// -------------------------------------------------------------------

// UploadRequest

// .import_sstpb.SSTMeta meta = 1;
inline bool UploadRequest::has_meta() const {
  return chunk_case() == kMeta;
}
inline void UploadRequest::set_has_meta() {
  _oneof_case_[0] = kMeta;
}
inline void UploadRequest::clear_meta() {
  if (has_meta()) {
    delete chunk_.meta_;
    clear_has_chunk();
  }
}
inline ::import_sstpb::SSTMeta* UploadRequest::release_meta() {
  // @@protoc_insertion_point(field_release:import_sstpb.UploadRequest.meta)
  if (has_meta()) {
    clear_has_chunk();
      ::import_sstpb::SSTMeta* temp = chunk_.meta_;
    chunk_.meta_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::import_sstpb::SSTMeta& UploadRequest::meta() const {
  // @@protoc_insertion_point(field_get:import_sstpb.UploadRequest.meta)
  return has_meta()
      ? *chunk_.meta_
      : *reinterpret_cast< ::import_sstpb::SSTMeta*>(&::import_sstpb::_SSTMeta_default_instance_);
}
inline ::import_sstpb::SSTMeta* UploadRequest::mutable_meta() {
  if (!has_meta()) {
    clear_chunk();
    set_has_meta();
    chunk_.meta_ = new ::import_sstpb::SSTMeta;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.UploadRequest.meta)
  return chunk_.meta_;
}

// bytes data = 2;
inline bool UploadRequest::has_data() const {
  return chunk_case() == kData;
}
inline void UploadRequest::set_has_data() {
  _oneof_case_[0] = kData;
}
inline void UploadRequest::clear_data() {
  if (has_data()) {
    chunk_.data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_chunk();
  }
}
inline const ::std::string& UploadRequest::data() const {
  // @@protoc_insertion_point(field_get:import_sstpb.UploadRequest.data)
  if (has_data()) {
    return chunk_.data_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void UploadRequest::set_data(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:import_sstpb.UploadRequest.data)
  if (!has_data()) {
    clear_chunk();
    set_has_data();
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  chunk_.data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_sstpb.UploadRequest.data)
}
#if LANG_CXX11
inline void UploadRequest::set_data(::std::string&& value) {
  // @@protoc_insertion_point(field_set:import_sstpb.UploadRequest.data)
  if (!has_data()) {
    clear_chunk();
    set_has_data();
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  chunk_.data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:import_sstpb.UploadRequest.data)
}
#endif
inline void UploadRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_data()) {
    clear_chunk();
    set_has_data();
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  chunk_.data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_sstpb.UploadRequest.data)
}
inline void UploadRequest::set_data(const void* value, size_t size) {
  if (!has_data()) {
    clear_chunk();
    set_has_data();
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  chunk_.data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_sstpb.UploadRequest.data)
}
inline ::std::string* UploadRequest::mutable_data() {
  if (!has_data()) {
    clear_chunk();
    set_has_data();
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.UploadRequest.data)
  return chunk_.data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadRequest::release_data() {
  // @@protoc_insertion_point(field_release:import_sstpb.UploadRequest.data)
  if (has_data()) {
    clear_has_chunk();
    return chunk_.data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void UploadRequest::set_allocated_data(::std::string* data) {
  if (!has_data()) {
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_chunk();
  if (data != NULL) {
    set_has_data();
    chunk_.data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        data);
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.UploadRequest.data)
}

inline bool UploadRequest::has_chunk() const {
  return chunk_case() != CHUNK_NOT_SET;
}
inline void UploadRequest::clear_has_chunk() {
  _oneof_case_[0] = CHUNK_NOT_SET;
}
inline UploadRequest::ChunkCase UploadRequest::chunk_case() const {
  return UploadRequest::ChunkCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UploadResponse

// -------------------------------------------------------------------

// IngestRequest

// .kvrpcpb.Context context = 1;
inline bool IngestRequest::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline const ::kvrpcpb::Context& IngestRequest::context() const {
  const ::kvrpcpb::Context* p = context_;
  // @@protoc_insertion_point(field_get:import_sstpb.IngestRequest.context)
  return p != NULL ? *p : *reinterpret_cast<const ::kvrpcpb::Context*>(
      &::kvrpcpb::_Context_default_instance_);
}
inline ::kvrpcpb::Context* IngestRequest::release_context() {
  // @@protoc_insertion_point(field_release:import_sstpb.IngestRequest.context)
  
  ::kvrpcpb::Context* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::kvrpcpb::Context* IngestRequest::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::kvrpcpb::Context;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.IngestRequest.context)
  return context_;
}
inline void IngestRequest::set_allocated_context(::kvrpcpb::Context* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(context_);
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.IngestRequest.context)
}

// .import_sstpb.SSTMeta sst = 2;
inline bool IngestRequest::has_sst() const {
  return this != internal_default_instance() && sst_ != NULL;
}
inline void IngestRequest::clear_sst() {
  if (GetArenaNoVirtual() == NULL && sst_ != NULL) {
    delete sst_;
  }
  sst_ = NULL;
}
inline const ::import_sstpb::SSTMeta& IngestRequest::sst() const {
  const ::import_sstpb::SSTMeta* p = sst_;
  // @@protoc_insertion_point(field_get:import_sstpb.IngestRequest.sst)
  return p != NULL ? *p : *reinterpret_cast<const ::import_sstpb::SSTMeta*>(
      &::import_sstpb::_SSTMeta_default_instance_);
}
inline ::import_sstpb::SSTMeta* IngestRequest::release_sst() {
  // @@protoc_insertion_point(field_release:import_sstpb.IngestRequest.sst)
  
  ::import_sstpb::SSTMeta* temp = sst_;
  sst_ = NULL;
  return temp;
}
inline ::import_sstpb::SSTMeta* IngestRequest::mutable_sst() {
  
  if (sst_ == NULL) {
    sst_ = new ::import_sstpb::SSTMeta;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.IngestRequest.sst)
  return sst_;
}
inline void IngestRequest::set_allocated_sst(::import_sstpb::SSTMeta* sst) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sst_;
  }
  if (sst) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sst = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sst, submessage_arena);
    }
    
  } else {
    
  }
  sst_ = sst;
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.IngestRequest.sst)
}

// -------------------------------------------------------------------

// IngestResponse

// .errorpb.Error error = 1;
inline bool IngestResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline const ::errorpb::Error& IngestResponse::error() const {
  const ::errorpb::Error* p = error_;
  // @@protoc_insertion_point(field_get:import_sstpb.IngestResponse.error)
  return p != NULL ? *p : *reinterpret_cast<const ::errorpb::Error*>(
      &::errorpb::_Error_default_instance_);
}
inline ::errorpb::Error* IngestResponse::release_error() {
  // @@protoc_insertion_point(field_release:import_sstpb.IngestResponse.error)
  
  ::errorpb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline ::errorpb::Error* IngestResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::errorpb::Error;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.IngestResponse.error)
  return error_;
}
inline void IngestResponse::set_allocated_error(::errorpb::Error* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(error_);
  }
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    
  } else {
    
  }
  error_ = error;
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.IngestResponse.error)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace import_sstpb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_import_5fsstpb_2eproto__INCLUDED
